plugins {
    id 'org.springframework.boot' version '2.5.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.coditory.integration-test' version '1.2.3'
    id 'java'
    id "com.google.protobuf" version "0.8.17"
    id "com.palantir.git-version" version "0.12.3"
    id "com.jfrog.artifactory" version '4.24.20'

}
group = 'com.ynero.ss'
sourceCompatibility = '11'
targetCompatibility = '11'
version = tagVersion()
def tagVersion(){
    return ['sh', '-c', 'git describe --abbrev=0 --tags'].execute().text.trim()
}
repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url "http://ss-dev-jenkins:8081/artifactory/ss-artifacts"
        allowInsecureProtocol true
        credentials {
            username = System.getenv('SS_DEV_ARTIFACTORY_USERNAME')
            password = System.getenv('SS_DEV_ARTIFACTORY_PASSWORD')
        }
    }
}
springBoot {
    buildInfo()
}
dependencies {

    //shared
    implementation "com.ynero.ss:proto-files:${project['com.ynero.ss.proto-files.version']}"
    implementation 'com.ynero.ss:common-dtos:0.0.1'
    implementation 'com.ynero.ss:converters:0.0.1'
    implementation 'com.ynero.ss:sending-lib:0.0.1'
    implementation 'com.ynero.ss:healthchecks:0.0.1'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'

    implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.0'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '0.7.5'

    //pub/sub
    implementation platform('com.google.cloud:libraries-bom:20.9.0')
    implementation 'com.google.cloud:google-cloud-pubsub'
    implementation 'com.google.cloud:spring-cloud-gcp-autoconfigure:2.0.0'
    implementation 'com.google.cloud:spring-cloud-gcp-pubsub:2.0.3'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-gcp-pubsub', version: '1.2.1.RELEASE'

    //actuator
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.5.3'
    implementation 'junit:junit:4.13.1'
    implementation 'org.projectlombok:lombok:1.18.18'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    integrationCompileOnly 'org.projectlombok:lombok'
    integrationAnnotationProcessor 'org.projectlombok:lombok'

    //kafka
    implementation 'org.springframework.kafka:spring-kafka'

    //mongo
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'

    // testing (junit5 + mockito + testcontainers)
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.junit.jupiter:junit-jupiter-params'
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.assertj:assertj-core'
    integrationImplementation "org.testcontainers:junit-jupiter:1.15.3"
    integrationImplementation "org.testcontainers:mongodb:1.15.3"

    //gRPC
    implementation 'io.grpc:grpc-core:1.39.0'
    implementation 'io.grpc:grpc-protobuf:1.39.0'
    implementation 'io.grpc:grpc-stub:1.39.0'
    implementation 'io.grpc:grpc-netty:1.39.0'
    protobuf "com.ynero.ss:proto-files:${project['com.ynero.ss.proto-files.version']}"
}
configurations.all {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

tasks.withType(Test) {
    useJUnitPlatform()
    testLogging {
        events = ["passed", "failed", "skipped"]
        exceptionFormat = "full"
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.2.0"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.4.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

bootJar {
    archiveFileName = "${project.name}.jar"
}
